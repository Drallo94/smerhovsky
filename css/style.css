:root {
  --bg-body: #fff;
  --scroll-padding-top: 0px;
  --text-color-default: #37474F;
  --font-default: "Poppins",Arial,sans-serif;
  --font-secondary: "Merriweather",Arial,sans-serif;
  --in-max-width: 1200px
}
*,
::after,
::before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box
}
html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent;
  scroll-padding-top: var(--scroll-padding-top)
}
@-ms-viewport {
  width: device-width
}
article,
aside,
dialog,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block
}
body {
  margin: 0;
  font-family: var(--font-default);
  font-size: 15px;
  font-weight: 400;
  line-height: 1.4;
  color: var(--text-color-default);
  text-align: left;
  background-color: var(--bg-body)
}
body.nav-is-open {
  overflow: hidden
}
@media (min-width:1366px) {
  body {
    line-height: 1.4;
    font-size: 15px
  }
}
[tabindex="-1"]:focus {
  outline: 0!important
}
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
  overflow: visible
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 20px
}
p {
  margin-top: 0;
  margin-bottom: 10px
}
ol ol,
ol ul,
p:last-child,
ul ol,
ul ul {
  margin-bottom: 0
}
abbr[data-original-title],
abbr[title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0
}
address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit
}
dl,
ol,
ul {
  margin-top: 0;
  margin-bottom: 1rem
}
dt {
  font-weight: 400
}
dd {
  margin-bottom: .5rem;
  margin-left: 0
}
blockquote,
figure {
  margin: 0 0 1rem
}
dfn {
  font-style: italic
}
b,
strong {
  font-weight: bolder
}
small {
  font-size: 80%
}
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline
}
sub {
  bottom: -.25em
}
sup {
  top: -.5em
}
a {
  color: currentColor;
  text-decoration: underline;
  background-color: transparent;
  -webkit-text-decoration-skip: objects
}
a:hover {
  text-decoration: none
}
a:not([href]):not([tabindex]),
a:not([href]):not([tabindex]):focus,
a:not([href]):not([tabindex]):hover {
  color: inherit;
  text-decoration: none
}
a:not([href]):not([tabindex]):focus {
  outline: 0
}
code,
kbd,
pre,
samp {
  font-family: monospace,monospace;
  font-size: 1em
}
pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  -ms-overflow-style: scrollbar
}
img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  border-style: none
}
svg:not(:root) {
  overflow: hidden
}
table {
  border-collapse: collapse
}
caption {
  padding-top: 0;
  padding-bottom: 0;
  color: #1c1c1c;
  text-align: left;
  caption-side: bottom
}
th {
  text-align: inherit
}
label {
  display: inline-block;
  margin-bottom: .5rem
}
button {
  border-radius: 0
}
button:focus {
  outline: dotted 1px;
  outline: -webkit-focus-ring-color auto 5px
}
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit
}
button,
input {
  overflow: visible
}
button,
select {
  text-transform: none
}
[type=reset],
[type=submit],
button,
html [type=button] {
  -webkit-appearance: button
}
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner,
button::-moz-focus-inner {
  padding: 0;
  border-style: none
}
input[type=checkbox],
input[type=radio] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0
}
input[type=date],
input[type=datetime-local],
input[type=month],
input[type=time] {
  -webkit-appearance: listbox
}
textarea {
  overflow: auto;
  resize: vertical
}
fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0
}
legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal
}
progress {
  vertical-align: baseline
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto
}
[type=search] {
  outline-offset: -2px;
  -webkit-appearance: none
}
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none
}
::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button
}
output {
  display: inline-block
}
summary {
  display: list-item;
  cursor: pointer
}
template {
  display: none
}
[hidden] {
  display: none!important
}
.icon--logo {
  width: 194px;
  height: 38px
}
.center {
  text-align: center
}
.upper {
  text-transform: uppercase
}
.hide {
  display: none!important
}
@media (max-width:767px) {
  .hide--mobile {
    display: none!important
  }
}
@media (min-width:768px) and (max-width:1024px) {
  .hide--tablet {
    display: none!important
  }
}
@media (min-width:1024px) {
  .hide--desktop {
    display: none!important
  }
}
.about {
  display: grid;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 40px
}
.about__title.title {
  position: relative;
  margin-bottom: 26px;
  padding-bottom: 26px
}
.about__title.title:before {
  content: "";
  width: 70px;
  height: 2px;
  background: #e1e1e1;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%)
}
.about__textbox {
  font-family: var(--font-secondary)
}
.about__left {
  text-align: center
}
@media (min-width:1024px) {
  .about {
    grid-template-columns: 1fr 2fr;
    gap: 80px
  }
  .about__title.title:before {
    left: 0;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none
  }
  .about__left {
    text-align: left
  }
}
.about__right {
  text-align: center
}
.animate--fade {
  -webkit-transition: opacity 1s;
  transition: opacity 1s;
  opacity: 0
}
.animate--fade.animate--visible {
  opacity: 1
}
.animate--fall {
  -webkit-transition: opacity 1s,transform 1s;
  transition: opacity 1s,transform 1s;
  -webkit-transform: translate(0,-10px);
  -ms-transform: translate(0,-10px);
  transform: translate(0,-10px)
}
.animate--fall.animate--visible {
  -webkit-transform: translate(0,0);
  -ms-transform: translate(0,0);
  transform: translate(0,0)
}
.boxes__list {
  display: grid;
  gap: 60px
}
.boxes__main.title {
  margin-bottom: 50px
}
.boxes__title {
  font-family: var(--font-secondary);
  margin-bottom: 15px;
  font-weight: 400;
  font-size: 22px;
  color: #2c2c2c
}
.boxes__textbox {
  margin: 0 auto
}
@media (min-width:768px) {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-bottom: 30px
  }
  p {
    margin-bottom: 20px
  }
  .about__title.title {
    padding-bottom: 36px
  }
  .boxes__textbox {
    max-width: 70%
  }
}
@media (min-width:1024px) {
  .about__right {
    text-align: right
  }
  .boxes__list {
    gap: 30px;
    grid-template-columns: repeat(3,1fr)
  }
  .boxes__textbox {
    max-width: 100%
  }
}
.boxes__item {
  display: grid;
  position: relative;
  text-align: center
}
.boxes__line {
  background: #e1e1e1;
  width: 100%;
  height: 2px;
  margin-top: 15px
}
@media (max-width:1023px) {
  .boxes__item:first-of-type .boxes__line {
    display: none
  }
  .boxes__line {
    position: absolute;
    width: 100%;
    left: 0;
    top: -30px;
    margin: 0
  }
}
.boxes__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 30px;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center
}
@media (min-width:1024px) {
  .boxes__item {
    gap: 30px;
    text-align: left;
    grid-template-columns: 30px 1fr
  }
  .boxes__wrapper {
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start
  }
}
.breadcrumbs {
  background: #232323;
  height: 50px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: 71px 0 0
}
@media (min-width:768px) {
  .breadcrumbs {
    margin: 91px 0 0
  }
}
.breadcrumbs ul {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 40px
}
.breadcrumbs ul li {
  list-style-type: none;
  font-size: 12px;
  text-transform: uppercase;
  position: relative
}
.breadcrumbs ul li:last-of-type:after {
  display: none
}
.breadcrumbs ul li:after {
  content: "";
  width: 12px;
  height: 12px;
  background: url(../images/bread.svg) center center/100% no-repeat;
  position: absolute;
  right: -26px;
  top: 2px
}
.breadcrumbs ul li span {
  color: #fff
}
.breadcrumbs ul li a {
  text-decoration: none;
  color: #969696
}
.btn {
  border: 0;
  padding: 0;
  outline: 0!important;
  background: 0 0;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-decoration: none
}
.btn--full {
  background: #363636;
  color: #fff;
  font-size: 13px;
  text-transform: uppercase;
  font-weight: 700;
  padding: 14px 27px;
  border-radius: 100px;
  -webkit-transition: background .3s;
  transition: background .3s
}
.btn--green {
  background: #00ac4b
}
.btn--orange {
  background: #f28200
}
.btn--burger {
  position: relative;
  color: currentColor;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  min-width: 0;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end
}
.btn--burger:before {
  content: "";
  position: absolute;
  inset: -15px -10px
}
.btn--burger span {
  width: 26px;
  height: 2px;
  display: block;
  background-color: currentColor;
  -webkit-transition: opacity .3s,width .3s,-webkit-transform .3s;
  transition: opacity .3s,transform .3s,width .3s,-webkit-transform .3s
}
.btn--burger span:nth-child(2) {
  margin: 7px 0
}
.nav-is-open .btn--burger span:nth-child(2) {
  opacity: 0
}
.nav-is-open .btn--burger span:nth-child(3) {
  -webkit-transform: rotate(45deg) translate(-6px,-7px);
  -ms-transform: rotate(45deg) translate(-6px,-7px);
  transform: rotate(45deg) translate(-6px,-7px)
}
.nav-is-open .btn--burger span:nth-child(1) {
  -webkit-transform: rotate(-45deg) translate(-6px,6px);
  -ms-transform: rotate(-45deg) translate(-6px,6px);
  transform: rotate(-45deg) translate(-6px,6px)
}
.contact {
  position: relative;
  padding: 100px 0 0
}
@media (min-width:768px) {
  .contact {
    padding: 130px 0 0
  }
}
.contact__map {
  width: 100%;
  height: 400px
}
@media (min-width:1024px) {
  .breadcrumbs {
    margin: 120px 0 0
  }
  .contact {
    padding: 192px 0 0;
    min-height: 917px
  }
  .contact__map {
    position: absolute;
    right: 0;
    top: 120px;
    max-width: 65dvw;
    height: calc(100% - 120px)
  }
}
@media (min-width:1920px) {
  .contact__map {
    max-width: 60dvw
  }
}
.contact__map iframe {
  height: 100%;
  width: 100%
}
.contact__title.title {
  margin-bottom: 16px
}
.contact__textbox {
  color: #546e7a;
  margin-bottom: 32px
}
.contact__textbox p span {
  font-weight: 700;
  display: inline-block;
  margin-right: 10px;
  color: #37474f
}
.contact__textbox p a {
  -webkit-transition: color .3s;
  transition: color .3s;
  text-decoration: none;
  color: #37474f
}
.dropdown {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 5px
}
.dropdown__items {
  opacity: 0;
  pointer-events: none;
  z-index: 5;
  -webkit-transition: opacity .3s;
  transition: opacity .3s
}
@media (max-width:767px) {
  .dropdown {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between
  }
  .dropdown__items {
    display: none!important
  }
  .footer__list p {
    text-align: center
  }
}
@media (pointer:fine) {
  .btn--full:active,
  .btn--full:focus,
  .btn--full:hover {
    background: #29b6f6
  }
  .contact__textbox p a:active,
  .contact__textbox p a:focus,
  .contact__textbox p a:hover {
    color: #29b6f6
  }
  .dropdown:hover .dropdown__items {
    opacity: 1;
    pointer-events: auto
  }
  .footer__list p a:active,
  .footer__list p a:focus,
  .footer__list p a:hover {
    color: #29b6f6
  }
}
@media (pointer:fine) and (max-width:767px) {
  .dropdown:hover .dropdown__items {
    display: -webkit-box!important;
    display: -ms-flexbox!important;
    display: flex!important
  }
}
@media (pointer:coarse) {
  .dropdown.is-open .dropdown__items {
    opacity: 1;
    pointer-events: auto
  }
}
@media (pointer:coarse) and (max-width:767px) {
  .dropdown.is-open .dropdown__items {
    display: -webkit-box!important;
    display: -ms-flexbox!important;
    display: flex!important
  }
}
.editor h1 {
  line-height: 1.1;
  font-family: var(--font-secondary);
  color: #2c2c2c;
  font-weight: 400;
  margin-bottom: 22px;
  font-size: 30px
}
@media (min-width:1024px) {
  .editor h1 {
    font-size: 40px
  }
}
.editor p {
  color: #37474f;
  margin: 20px 0
}
.editor h2 {
  font-size: 16px;
  font-family: var(--font-secondary);
  font-weight: 400;
  color: #37474f;
  margin: 42px 0 11px
}
.editor ul {
  margin: 22px 0;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 22px
}
.editor ul li {
  list-style-type: none;
  color: #546e7a;
  padding-left: 30px;
  background: url(../images/check.svg) left 8px top 5px/12px no-repeat
}
@media (min-width:768px) {
  .dropdown__items {
    position: absolute;
    left: 0;
    width: 100%;
    top: 100%
  }
  .editor ul li {
    background: url(../images/check.svg) left 20px top 6px/12px no-repeat;
    padding-left: 60px
  }
}
.faq {
  position: relative;
  padding: 30px 0
}
@media (min-width:768px) {
  .faq {
    padding: 50px
  }
}
@media (min-width:1024px) {
  .faq {
    padding: 54px 30px 54px 80px
  }
}
@media (min-width:1366px) {
  .boxes__item {
    grid-template-columns: 60px 1fr
  }
  .faq {
    padding: 72px 0 72px 115px
  }
}
.faq:before {
  content: "";
  width: 100dvw;
  height: 2px;
  background: #ebebeb;
  position: absolute;
  top: 0;
  left: 0
}
.faq__list {
  display: grid;
  gap: 20px
}
@media (min-width:768px) {
  .faq__list {
    gap: 30px
  }
}
.faq__title {
  line-height: 1.1;
  font-family: var(--font-secondary);
  color: #2c2c2c;
  font-weight: 400;
  font-size: 30px;
  margin-bottom: 30px
}
@media (min-width:768px) {
  .faq__title {
    margin-bottom: 50px
  }
  .faq__question:before {
    content: "Q";
    left: -22px;
    position: absolute;
    color: #f1f1f1;
    z-index: -1;
    font-weight: 400;
    font-family: var(--font-secondary);
    font-size: 30px;
    top: -16px
  }
}
.faq__question {
  color: #2a373e;
  font-weight: 700;
  font-family: var(--font-secondary);
  position: relative;
  margin-bottom: 12px
}
@media (min-width:1024px) {
  .faq__list {
    grid-template-columns: repeat(2,1fr);
    gap: 50px
  }
  .faq__title {
    font-size: 40px
  }
  .faq__question {
    min-height: 50px;
    margin-bottom: 18px
  }
  .faq__question:before {
    top: -30px;
    font-size: 59px
  }
}
.faq__answer {
  color: #546e7a;
  text-align: justify;
  position: relative
}
@media (min-width:768px) {
  .faq__answer:before {
    content: "A";
    left: -19px;
    position: absolute;
    color: #f1f1f1;
    z-index: -1;
    font-weight: 400;
    font-family: var(--font-secondary);
    font-size: 30px;
    top: -14px
  }
}
.footer__top {
  background: #363636;
  color: #fff;
  padding: 60px 0
}
.footer__list p {
  margin-bottom: 10px
}
.footer__list p span {
  color: #fff;
  display: block
}
@media (min-width:768px) {
  .footer__top {
    padding: 80px 0
  }
  .footer__list p span {
    display: inline-block;
    min-width: 75px
  }
}
.footer__list p a {
  text-decoration: none;
  -webkit-transition: color .3s;
  transition: color .3s;
  color: #fff
}
.footer__list p:last-of-type {
  margin-bottom: 0
}
.footer__bottom {
  padding: 50px 0;
  background: #2c2c2c
}
.footer__cols {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
  gap: 50px
}
@media (min-width:768px) {
  .footer__cols {
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(3,1fr)
  }
}
@media (min-width:1024px) {
  .faq__answer:before {
    top: -24px;
    font-size: 59px
  }
  .footer__cols {
    gap: 0
  }
}
.footer__logo {
  margin-bottom: 20px
}
.footer__textbox {
  color: #fff;
  font-size: 14px
}
.footer__textbox p:last-of-type {
  font-size: 11px;
  letter-spacing: .14em
}
.footer__title.title {
  color: #878787;
  margin-bottom: 25px
}
.footer__col ul {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px
}
.footer__col ul li {
  list-style-type: none
}
.footer__col ul li a {
  text-decoration: none;
  color: #fff;
  -webkit-transition: color .3s;
  transition: color .3s
}
.footer--short .footer__top {
  display: none
}
.header-nav__opener {
  -webkit-transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s,-webkit-transform .3s
}
@media (max-width:767px) {
  .footer__col {
    text-align: center
  }
  .header-nav__opener {
    border: 1px solid #fff;
    border-radius: 4px;
    width: 24px;
    height: 24px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center
  }
}
.is-open .header-nav__opener {
  -webkit-transform: scaleY(-1);
  -ms-transform: scaleY(-1);
  transform: scaleY(-1)
}
.header-nav ul {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 30px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column
}
.header-nav ul li {
  list-style-type: none
}
.header-nav ul li a {
  text-decoration: none;
  position: relative;
  font-size: 20px;
  padding: 10px 0
}
@media (min-width:768px) {
  .header-nav ul {
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row
  }
  .header-nav ul li a {
    font-size: 17px
  }
}
.header-nav ul li a:before {
  content: "";
  width: 0;
  -webkit-transition: width .3s;
  transition: width .3s;
  height: 1px;
  position: absolute;
  bottom: 9px;
  left: 0;
  background: #fff
}
.header-nav ul li ul {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  background: #fff;
  border-radius: 4px;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  padding: 15px;
  gap: 20px;
  -webkit-box-shadow: 0 5px 5px rgba(0,0,0,.2);
  box-shadow: 0 5px 5px rgba(0,0,0,.2);
  width: 100%;
  margin-bottom: -15px
}
.header-nav ul li ul li a {
  color: #069;
  font-size: 15px
}
.header {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  z-index: 100;
  color: #fff;
  -webkit-transition: background .15s,border-color .15s;
  transition: background .15s,border-color .15s;
  border-bottom: 1px solid #fff
}
@media (min-width:768px) {
  .header-nav ul li ul {
    width: 200px;
    margin-bottom: 0
  }
  .header {
    border-bottom: 1px solid transparent
  }
}
.nav-is-open .header {
  background: #069
}
.is-scrolled .header {
  background: #069;
  border-bottom-color: #fff
}
@media (max-width:767px) {
  .header__helper {
    position: fixed;
    top: 71px;
    height: calc(100dvh - 71px);
    left: 0;
    background: #069;
    width: 100%;
    padding: 30px 15px;
    opacity: 0;
    pointer-events: none;
    -webkit-transition: opacity .3s;
    transition: opacity .3s;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    gap: 30px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column
  }
  .nav-is-open .header__helper {
    opacity: 1;
    pointer-events: auto
  }
  .header__social {
    opacity: 0;
    pointer-events: none;
    -webkit-transition: opacity .3s;
    transition: opacity .3s
  }
  .nav-is-open .header__social {
    opacity: 1;
    pointer-events: auto
  }
  .header__phone img {
    max-width: 15px
  }
}
.header__social img {
  -webkit-transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s,-webkit-transform .3s
}
.header__in.in {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-transition: height .15s;
  transition: height .15s;
  height: 70px
}
@media (min-width:768px) {
  .header__in.in {
    height: 90px
  }
  .is-scrolled .header__in.in {
    height: 80px
  }
}
.header__left {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 60px
}
.header__logo {
  max-width: 70px
}
@media (min-width:768px) {
  .header__logo {
    max-width: 90px
  }
}
@media (min-width:1024px) {
  .header__in.in {
    height: 120px
  }
  .is-scrolled .header__in.in {
    height: 100px
  }
  .header__left {
    gap: 230px
  }
  .header__logo {
    max-width: 120px
  }
}
.header__right {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 20px
}
.header__right a {
  text-decoration: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 10px
}
.header__phone {
  border: 1px solid #fff;
  border-radius: 4px;
  padding: 5px 10px
}
@media (pointer:fine) {
  .footer__col ul li a:active,
  .footer__col ul li a:focus,
  .footer__col ul li a:hover {
    color: #29b6f6
  }
  .header-nav ul li:active .header-nav__opener,
  .header-nav ul li:focus .header-nav__opener,
  .header-nav ul li:hover .header-nav__opener {
    -webkit-transform: scaleY(-1);
    -ms-transform: scaleY(-1);
    transform: scaleY(-1)
  }
  .header-nav ul li:active a:before,
  .header-nav ul li:focus a:before,
  .header-nav ul li:hover a:before {
    width: 100%
  }
  .header-nav ul li ul li a:active,
  .header-nav ul li ul li a:focus,
  .header-nav ul li ul li a:hover {
    text-decoration: underline
  }
  .header__social:active img,
  .header__social:focus img,
  .header__social:hover img {
    -webkit-transform: translateY(-4px);
    -ms-transform: translateY(-4px);
    transform: translateY(-4px)
  }
  .header__phone:active span:before,
  .header__phone:focus span:before,
  .header__phone:hover span:before {
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
    opacity: 1
  }
  .references .splide__arrow:hover {
    opacity: 1!important
  }
}
.header__phone span {
  position: relative
}
.header__phone span:before {
  content: "";
  width: 100%;
  height: 1px;
  background: #fff;
  position: absolute;
  bottom: 0;
  left: 0;
  opacity: 0;
  -webkit-transform: translateY(2px);
  -ms-transform: translateY(2px);
  transform: translateY(2px);
  -webkit-transition: opacity .3s,-webkit-transform .3s;
  transition: opacity .3s,transform .3s,-webkit-transform .3s
}
.header--subpage {
  background: #069
}
.header--subpage .header__left {
  gap: 60px
}
.hero {
  background: #069;
  color: #fff;
  position: relative;
  overflow: hidden;
  padding: 120px 0 60px
}
@media (min-width:768px) {
  .hero {
    padding: 180px 0 60px
  }
}
.hero__bg {
  opacity: 1;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%;
  left: 0;
  opacity: .1
}
@media (min-width:1024px) {
  .hero {
    min-height: 100dvh;
    padding: 200px 0 0
  }
  .hero__bg {
    margin-left: -165px;
    left: 50%;
    max-width: calc(100dvw - 165px);
    opacity: 1
  }
}
@media (min-width:1366px) {
  .hero__bg {
    max-width: calc(100dvw - 285px);
    margin-left: -285px
  }
}
@media (max-width:1023px) {
  .hero .in {
    position: relative;
    z-index: 3
  }
}
.hero__box {
  text-align: center
}
@media (min-width:1024px) {
  .hero__box {
    max-width: 290px;
    text-align: left
  }
}
.hero .title {
  font-family: var(--font-secondary);
  margin-bottom: 50px;
  color: #fff
}
@media (max-width:767px) {
  .hero__bg {
    -o-object-position: left;
    object-position: left
  }
  .hero .title {
    font-size: 28px
  }
}
.hero__textbox {
  font-family: var(--font-secondary);
  font-size: 17px
}
.in {
  max-width: var(--in-max-width);
  margin-left: auto;
  margin-right: auto;
  width: calc(100% - 30px)
}
.references__top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-family: var(--font-secondary);
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 80px
}
@media (min-width:768px) {
  .references__top {
    margin-bottom: 60px;
    gap: 30px;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row
  }
}
.references__item {
  border-left: 2px solid #e1e1e1;
  padding-left: 70px;
  position: relative
}
.references__quote {
  position: absolute;
  top: 0;
  left: 28px
}
.references__textbox p {
  margin-bottom: 25px;
  color: #546e7a
}
.references__textbox p:last-of-type {
  margin-bottom: 0;
  font-size: 15px;
  color: #2c2c2c
}
.references .splide__arrows {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 20px;
  top: -60px;
  right: 50%;
  -webkit-transform: translateX(50%);
  -ms-transform: translateX(50%);
  transform: translateX(50%)
}
@media (min-width:768px) {
  .references .splide__arrows {
    right: 0;
    top: -100px;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none
  }
  .tabs .in {
    grid-template-columns: 250px 1fr
  }
}
.references .splide__arrow {
  position: relative;
  right: 0;
  left: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: .5!important;
  width: 30px;
  height: 30px;
  background: url(../images/carousel.svg) center center no-repeat;
  -webkit-transition: opacity .3s;
  transition: opacity .3s
}
.references .splide__arrow:focus {
  outline: 0
}
.references .splide__arrow svg {
  display: none
}
.references .splide__arrow--prev {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg)
}
.section {
  border-bottom: 2px solid #e1e1e1;
  padding: 60px 0
}
@media (min-width:1024px) {
  .references__top {
    margin-bottom: 78px;
    gap: 60px
  }
  .references .splide__arrows {
    gap: 30px;
    top: -120px
  }
  .section {
    padding: 100px 0
  }
  .tabs .in {
    grid-template-columns: 300px 1fr
  }
}
.splide__container {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: relative
}
.splide__list {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  height: 100%;
  margin: 0!important;
  padding: 0!important
}
.splide.is-initialized:not(.is-active) .splide__list {
  display: block
}
.splide__pagination {
  -ms-flex-align: center;
  -webkit-box-align: center;
  align-items: center;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
  justify-content: center;
  margin: 0;
  pointer-events: none
}
.splide__pagination li {
  display: inline-block;
  line-height: 1;
  list-style-type: none;
  margin: 0;
  pointer-events: auto
}
.splide:not(.is-overflow) .splide__pagination {
  display: none
}
.splide__progress__bar {
  width: 0
}
.splide {
  position: relative;
  visibility: hidden
}
.splide.is-initialized,
.splide.is-rendered {
  visibility: visible
}
.splide__slide {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  list-style-type: none!important;
  margin: 0;
  position: relative;
  -webkit-tap-highlight-color: transparent
}
.splide__slide img {
  vertical-align: bottom
}
.splide__spinner {
  -webkit-animation: 1s linear infinite splide-loading;
  animation: 1s linear infinite splide-loading;
  border: 2px solid #999;
  border-left-color: transparent;
  border-radius: 50%;
  bottom: 0;
  contain: strict;
  display: inline-block;
  height: 20px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 20px
}
.splide__sr {
  clip: rect(0 0 0 0);
  border: 0;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px
}
.splide__toggle.is-active .splide__toggle__play,
.splide__toggle__pause {
  display: none
}
.splide__toggle.is-active .splide__toggle__pause {
  display: inline
}
.splide__track {
  overflow: hidden;
  position: relative;
  z-index: 0
}
@-webkit-keyframes splide-loading {
  0% {
    -webkit-transform: rotate(0);
    transform: rotate(0)
  }
  to {
    -webkit-transform: rotate(1turn);
    transform: rotate(1turn)
  }
}
@keyframes splide-loading {
  0% {
    -webkit-transform: rotate(0);
    transform: rotate(0)
  }
  to {
    -webkit-transform: rotate(1turn);
    transform: rotate(1turn)
  }
}
.splide__track--draggable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
  user-select: none
}
.splide__track--fade > .splide__list > .splide__slide {
  margin: 0!important;
  opacity: 0;
  z-index: 0
}
.splide__track--fade > .splide__list > .splide__slide.is-active {
  opacity: 1;
  z-index: 1
}
.splide--rtl {
  direction: rtl
}
.splide__track--ttb > .splide__list {
  display: block
}
.splide__arrow {
  -ms-flex-align: center;
  -webkit-box-align: center;
  align-items: center;
  background: #ccc;
  border: 0;
  border-radius: 50%;
  cursor: pointer;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  height: 2em;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
  justify-content: center;
  opacity: .7;
  padding: 0;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  width: 2em;
  z-index: 1
}
.splide__arrow svg {
  fill: #000;
  height: 1.2em;
  width: 1.2em
}
.splide__arrow:hover:not(:disabled) {
  opacity: .9
}
.splide__arrow:disabled {
  opacity: .3
}
.splide__arrow:focus-visible {
  outline: #0bf solid 3px;
  outline-offset: 3px
}
.splide__arrow--prev {
  left: 1em
}
.splide__arrow--prev svg {
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1)
}
.splide__arrow--next {
  right: 1em
}
.splide.is-focus-in .splide__arrow:focus {
  outline: #0bf solid 3px;
  outline-offset: 3px
}
.splide__pagination {
  bottom: .5em;
  left: 0;
  padding: 0 1em;
  position: absolute;
  right: 0;
  z-index: 1
}
.splide__pagination__page {
  background: #ccc;
  border: 0;
  border-radius: 50%;
  display: inline-block;
  height: 8px;
  margin: 3px;
  opacity: .7;
  padding: 0;
  position: relative;
  -webkit-transition: -webkit-transform .2s linear;
  transition: transform .2s linear;
  transition: transform .2s linear,-webkit-transform .2s linear;
  width: 8px
}
.splide__pagination__page.is-active {
  background: #fff;
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  transform: scale(1.4);
  z-index: 1
}
.splide__pagination__page:hover {
  cursor: pointer;
  opacity: .9
}
.splide__pagination__page:focus-visible {
  outline: #0bf solid 3px;
  outline-offset: 3px
}
.splide.is-focus-in .splide__pagination__page:focus {
  outline: #0bf solid 3px;
  outline-offset: 3px
}
.splide__progress__bar {
  background: #ccc;
  height: 3px
}
.splide__slide:focus {
  outline: 0
}
@supports (outline-offset:-3px) {
  .splide__slide:focus-visible {
    outline: #0bf solid 3px;
    outline-offset: -3px
  }
  .splide.is-focus-in .splide__slide:focus {
    outline: #0bf solid 3px;
    outline-offset: -3px
  }
}
@media screen and (-ms-high-contrast:none) {
  .splide__slide:focus-visible {
    border: 3px solid #0bf
  }
  .splide.is-focus-in .splide__slide:focus {
    border: 3px solid #0bf
  }
  .splide.is-focus-in .splide__track > .splide__list > .splide__slide:focus {
    border-color: #0bf
  }
}
.splide__toggle {
  cursor: pointer
}
.splide__toggle:focus-visible {
  outline: #0bf solid 3px;
  outline-offset: 3px
}
.splide.is-focus-in .splide__toggle:focus {
  outline: #0bf solid 3px;
  outline-offset: 3px
}
.splide__track--nav > .splide__list > .splide__slide {
  border: 3px solid transparent;
  cursor: pointer
}
.splide__track--nav > .splide__list > .splide__slide.is-active {
  border: 3px solid #000
}
.splide__arrows--rtl .splide__arrow--prev {
  left: auto;
  right: 1em
}
.splide__arrows--rtl .splide__arrow--prev svg {
  -webkit-transform: scaleX(1);
  -ms-transform: scaleX(1);
  transform: scaleX(1)
}
.splide__arrows--rtl .splide__arrow--next {
  left: 1em;
  right: auto
}
.splide__arrows--rtl .splide__arrow--next svg {
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1)
}
.splide__arrows--ttb .splide__arrow {
  left: 50%;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%)
}
.splide__arrows--ttb .splide__arrow--prev {
  top: 1em
}
.splide__arrows--ttb .splide__arrow--prev svg {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg)
}
.splide__arrows--ttb .splide__arrow--next {
  bottom: 1em;
  top: auto
}
.splide__arrows--ttb .splide__arrow--next svg {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg)
}
.splide__pagination--ttb {
  bottom: 0;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  left: auto;
  padding: 1em 0;
  right: .5em;
  top: 0
}
.tabs {
  overflow: hidden
}
.tabs .in {
  display: grid
}
.tabs nav {
  font-family: var(--font-secondary);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  color: #000;
  padding-top: 30px;
  gap: 10px;
  font-size: 14px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center
}
.tabs nav div {
  cursor: pointer;
  -webkit-transition: background .3s;
  transition: background .3s;
  position: relative;
  background: #f7f7f7;
  padding: 8px;
  border-radius: 4px
}
.tabs nav div.current {
  background: #232323;
  color: #fff
}
.tabs__content {
  padding: 30px 0 10px
}
@media (min-width:768px) {
  .tabs nav {
    font-size: 15px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding-top: 56px;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    gap: 35px;
    border-right: 2px solid #ebebeb
  }
  .tabs nav div {
    border-radius: 0;
    padding: 0 0 0 27px;
    background: url(../images/bread.svg) left top 2px/16px no-repeat
  }
  .tabs nav div.current {
    font-weight: 700;
    color: #000;
    background: url(../images/bread.svg) left 5px top 2px/16px no-repeat
  }
  .tabs nav div.current:after,
  .tabs nav div.current:before {
    opacity: 1
  }
  .tabs nav div:before {
    content: "";
    position: absolute;
    right: -16px;
    top: 50%;
    margin-top: -17px;
    width: 0;
    z-index: 1;
    height: 0;
    display: block;
    border-style: solid;
    border-width: 15.5px 0 15.5px 16px;
    border-color: transparent transparent transparent #fff;
    pointer-events: none;
    opacity: 0
  }
  .tabs nav div:after {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    right: -19px;
    top: 50%;
    margin-top: -20px;
    display: block;
    border-style: solid;
    border-width: 18px 0 18px 19px;
    border-color: transparent transparent transparent #ebebeb;
    pointer-events: none;
    opacity: 0
  }
  .tabs__content {
    padding: 50px
  }
}
@media (min-width:1024px) {
  .tabs__content {
    padding: 54px 30px 54px 80px
  }
}
@media (min-width:1366px) {
  .tabs .in {
    grid-template-columns: 330px 1fr
  }
  .tabs__content {
    padding: 54px 0 82px 115px
  }
}
.title {
  margin: 0;
  font-family: var(--font-secondary);
  color: #2c2c2c
}
.title--2 {
  font-weight: 400;
  font-size: 30px
}
@media (min-width:768px) {
  .title--2 {
    font-size: 40px
  }
}
.title--3 {
  font-size: 22px;
  font-weight: 400
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
